plugins {
    id "base"
    id 'com.github.node-gradle.node'
}

npmInstall {
    inputs.files(fileTree('node_modules'))
    // Important: Use 'npm ci' instead of 'npm install' to ensure consistent dependencies.
    // 'npm ci' uses the exact versions from package-lock.json, preventing unexpected changes.
    npmCommand = ['ci'] 
    inputs.file('package.json')
    inputs.file('package-lock.json')
    inputs.file('angular.json')

    outputs.dir('build')

}


task runLint(type: NpmTask) {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')
    inputs.file('angular.json')

     outputs.dir('build')

    args = ['run','lint']
}


task runBuild(type: NpmTask) {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')
    inputs.file('angular.json')

    outputs.dir('build')

    dependsOn npmInstall,runLint
    args = ['run', 'build','--baseHref=/ui/', '--deployUrl=/ui/']
}


task runHeadlessTests(type: NpmTask) {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')
    inputs.file('angular.json')

    outputs.dir('reports')

    dependsOn runBuild
    args = ['run', 'headless']
}

task buildDocker(type: Exec) {
    workingDir project.projectDir
    commandLine 'docker', 'build', '--build-arg', "https_proxy=${proxy.https}",'-t', "lfeoperatorfabric/of-web-ui:${project.version}", '.'
}

build.dependsOn(runHeadlessTests)
build.dependsOn(runBuild)
runLint.dependsOn(npmInstall)
tasks.buildDocker.dependsOn build

assemble.dependsOn(runBuild)

tasks.named("buildDocker") {
    inputs.files(fileTree('build/distribution'))
    inputs.files(fileTree('nginx'))
    outputs.dir("build/docker")
}