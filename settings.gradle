dependencyResolutionManagement {

    repositories {
        mavenCentral()
        maven { url "https://repo1.maven.org/maven2" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://maven.eveoh.nl/content/repositories/releases" }
        maven { url "https://packages.confluent.io/maven/" }
        maven { url "https://artifacts.elastic.co/maven/"}
        maven { url "https://plugins.gradle.org/m2/" }
    }
}



rootProject.name = 'operator-fabric'

include 'tools:swagger-generator'
include 'tools:generic:utilities'
include 'tools:spring:spring-utilities'
include 'tools:spring:spring-mongo-utilities'
include 'tools:spring:spring-oauth2-utilities'
include 'tools:user-action-tracing'
include 'tools:spring:spring-test-utilities'
include 'tools:generic:test-utilities'
include 'client:businessconfig'
include 'client:cards'
include 'client:users'
include 'client:external-devices'
include 'services:businessconfig'
include 'services:cards-publication'
include 'services:cards-consultation'
include 'services:users'
include 'services:external-devices'
include 'node-services:cards-external-diffusion'
include 'node-services:cards-reminder'
include 'node-services:common'
include 'node-services:supervisor'
include 'rabbitmq'
include 'ui:main'
include 'externalApp'
include 'karateTests'
include 'cypressTests'
include 'gatlingTests'
include 'dummyModbusDevice'

project(':client:businessconfig').name = 'businessconfig-client-data'
project(':client:cards').name = 'cards-client-data'
project(':client:users').name = 'users-client-data'
project(':client:external-devices').name = 'external-devices-client-data'
project(':services:businessconfig').name = 'businessconfig-service'
project(':services:users').name = 'users-service'
project(':services:cards-publication').name = 'cards-publication-service'
project(':services:cards-consultation').name = 'cards-consultation-service'
project(':services:external-devices').name = 'external-devices-service'
project(':node-services:cards-external-diffusion').name = 'cards-external-diffusion-service'
project(':node-services:cards-reminder').name = 'cards-reminder'
project(':node-services:common').name = 'node-common'
project(':node-services:supervisor').name = 'supervisor'
project(':rabbitmq').name = 'rabbitmq'
project(':ui:main').name = 'web-ui'
project(':externalApp').projectDir = file('src/test/externalApp')
project(':karateTests').projectDir = file('src/test/api/karate')
project(':cypressTests').projectDir = file('src/test/cypress')
project(':gatlingTests').projectDir = file('src/test/gatling')
project(':dummyModbusDevice').projectDir = file('src/test/dummyModbusDevice')

//we check if the modules have gradle configuration files
rootProject.children.each { project ->
    project.buildFileName = "${project.name}.gradle"
    assert project.projectDir.isDirectory()
    assert project.buildFile.exists()
    assert project.buildFile.isFile()
}

