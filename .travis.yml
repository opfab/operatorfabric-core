sudo: required
dist: trusty
addons:
    sonarcloud:
        organization: "opfab"
        token:
            secure: ${SONAR_TOKEN}
services:
  - docker
env:
  - NODE_VERSION="v10.10.0"
language: java
before_install:
  - npm i -g npm@6.4.1
  - sdk install gradle 6.1.1
  - sudo apt-get install realpath
  - export OF_VERSION=$(cat VERSION)
  # Load cached docker images
  # - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
install: true
jobs:
  include:
  - stage: test-assemble
    script:
#      - rm -rf  $HOME/.gradle/caches/build-cache-*
#      - ./gradlew --build-cache clean
      - docker-compose -f src/main/docker/test-environment/docker-compose.yml up -d
      - export GRADLE_OPTS="-XX:MaxMetaspaceSize=512m -Xmx1024m"
      # If SONAR_TOKEN is not available (for external PRs for example), skip sonar
      - ./gradlew --build-cache copyDependencies test jacocoTestReport
      - if [ "${SONAR_TOKEN}" != "" ]; then
         && (sonar-scanner);
        fi
      - docker-compose -f src/main/docker/test-environment/docker-compose.yml down
#      - ./gradlew --build-cache assemble -x test
  - stage: docker-images
    script:
    - echo preparing image for version $OF_VERSION
    - docker login --username ${DOCKER_CLOUD_USER} --password ${DOCKER_CLOUD_PWD}
    - export GRADLE_OPTS="-XX:MaxMetaspaceSize=512m -Xmx1024m"
    - "[[ $OF_VERSION =~ .+SNAPSHOT$ ]] && ./gradlew --build-cache copyWorkingDir dockerPushSnapshot -x test || echo not publishing docker snapshot tag"
    - "[[ $OF_VERSION =~ .+RELEASE$ ]] && ./gradlew --build-cache copyWorkingDir dockerPushLatest -x test || echo not publishing docker latest tag"
    - "[[ $OF_VERSION =~ .+RELEASE$ ]] && ./gradlew --build-cache copyWorkingDir dockerPush${OF_VERSION} -x test || echo not publishing docker ${OF_VERSION} tag"
    - docker image ls -a|grep lfeoperatorfabric
  - stage: doc
    script:
      - export GRADLE_OPTS="-XX:MaxMetaspaceSize=512m -Xmx1024m"
      - ./gradlew --build-cache generateSwaggerCodeDoc javadoc asciidoctor :ui:main:npm_run_compodoc securityReport
      - ./CICD/travis/upload_doc.sh
stages:
  - test-assemble
  - name: docker-images
    if: (type = cron OR commit_message =~ ci_docker) AND (NOT type IN (pull_request)) AND (branch = master)
  - name: doc
    if: (type = cron OR commit_message =~ ci_documentation) AND (NOT type IN (pull_request)) AND (branch = master)
# Note: The condition on type is necessary to exclude PRs because their base branch could be master
#script:
#  - docker-compose -f src/main/docker/test-environment/docker-compose.yml up -d
#  - ./gradlew copyDependencies build jacocoTestReport && sonar-scanner
#deploy:
#- provider: script
#  skip_cleanup: true
#  script: ./CICD/travis/upload_doc.sh
#  on:
#    all_branches: true
#   # condition: $TRAVIS_EVENT_TYPE = cron  # Commented out while in documentation phase to trigger doc upload for all builds
before_cache:
  # cleanup gradle caches
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#  - docker image prune -f -a --filter="label=project=org.lfenergy.operatorfabric"
#  - >
#    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
#    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
cache:
  bundler: true
  directories:
    # caches gradle caches
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.gradle/dependency-check-data/
    # caches docker images
    #- $HOME/docker
    # cache ui dependencies
    - ui/main/nodes_modules
