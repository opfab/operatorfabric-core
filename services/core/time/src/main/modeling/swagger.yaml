swagger: '2.0'
info:
  description: OperatorFabric Time Management API
  version: 0.13.1.RELEASE
  title: Time Management
  termsOfService: ''
  contact:
    email: opfab-maintainers_AT_rte-france.com
    url: 'https://opfab.github.io/'
  license:
    name: Mozilla Public License V2.0
    url: 'http://mozilla.org/MPL/2.0/'
host: localhost
basePath: /apis
tags:
  - name: time
    description: Everything concerning time
schemes:
  - http
definitions:
  EpochDate:
    type: object
    description: Number of milliseconds since Epoch (long integer)
    example: 1551732725193
  SpeedEnum:
    type: string
    description: |-
      Speed of time flow in virtual time >
      * X1 - Normal speed
      * X2 - Twice as fast
      * X10 - Ten times as fast
      * X60 - 60 times as fast (1s = 1min)
      * X3600 - 3600 times as fast (1s = 1hour)
      * HALF - Half as fast
    enum:
      - X1
      - X2
      - X10
      - X60
      - X3600
      - HALF
    example: X2
  TimeData:
    type: object
    description: >-
      Description of a time configuration, containing the current virtual time
      as well as the references used for computation
    properties:
      referenceTime:
        $ref: '#/definitions/EpochDate'
        description: Real server time at last time change
      virtualTime:
        $ref: '#/definitions/EpochDate'
        description: Chosen virtual time start at last time change
      computedNow:
        $ref: '#/definitions/EpochDate'
        description: >-
          Current virtual time computed by server as virtualTime + (now -
          referenceTime) * speed
      speed:
        $ref: '#/definitions/SpeedEnum'
        description: Speed of virtual time flow
    example:
      referenceTime: 1551868290379
      virtualTime: 1520332290378
      computedNow: 1520332310718
      speed: X10
paths:
  '/time/{millisTime}/next/card':
    post:
      tags:
        - time
      summary: Force currentime to next card start time from specified millisTime minus 5 minutes
      operationId: fetchNextTime
      parameters:
        - in: path
          name: millisTime
          type: number
          required: true
          description: time in milliseconds from epoch
      responses:
        '200':
          description: OK
        '404':
          description: no Card found
  '/time/{millisTime}/previous/card':
    post:
      tags:
        - time
      summary: Force currentime to previous card start time from specified millisTime minus 5 minutes
      operationId: fetchPreviousTime
      parameters:
        - in: path
          name: millisTime
          type: number
          required: true
          description: time in milliseconds from epoch
      responses:
        '200':
          description: OK
        '404':
          description: no Card found
  '/time/next/card':
    post:
      tags:
      - time
      summary: Force currentime to next card start time minus 5 minutes
      operationId: fetchNextTimeFromNow
      responses:
        '200':
          description: OK
        '404':
          description: no Card found
  '/time/previous/card':
    post:
      tags:
      - time
      summary: Force currentime to previous card start time minus 5 minutes
      operationId: fetchPreviousTimeFromNow
      responses:
        '200':
          description: OK
        '404':
          description: no Card found
  /time:
    get:
      tags:
        - time
      summary: Fetch current time configuration
      description: Fetch current time configuration
      operationId: fetchTime
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TimeData'
        '401':
          description: Authentication required
    post:
      tags:
        - time
      summary: Set current time configuration
      description: Set current time configuration
      operationId: setTime
      parameters:
        - in: body
          name: time
          description: Time Data to update time service
          schema:
            $ref: '#/definitions/TimeData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TimeData'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
    put:
      tags:
        - time
      summary: Update current time configuration (same as setTime)
      description: Update current time configuration (same as setTime)
      operationId: updateTime
      parameters:
        - in: body
          name: time
          description: Time Data to update time service
          schema:
            $ref: '#/definitions/TimeData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TimeData'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
    delete:
      tags:
        - time
      summary: Reset time configuration
      description: Reset time configuration
      operationId: resetTime
      responses:
        '200':
          description: OK
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
  /time/current:
    post:
      tags:
        - time
      summary: Set start of virtual time
      description: Set start of virtual time (milliseconds since Epoch)
      operationId: setVirtualTime
      parameters:
        - in: body
          name: virtualTime
          description: Start of virtual time (milliseconds since Epoch)
          schema:
            $ref: '#/definitions/EpochDate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EpochDate'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
    put:
      tags:
        - time
      summary: Update start of virtual time (same as setVirtualTime)
      description: >-
        Updates start of virtual time (milliseconds since Epoch) (same as
        setVirtualTime)
      operationId: updateVirtualTime
      parameters:
        - in: body
          name: virtualTime
          description: Start of virtual time (milliseconds since Epoch)
          schema:
            $ref: '#/definitions/EpochDate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EpochDate'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
  /time/speed:
    post:
      tags:
        - time
      summary: Set virtual time speed
      description: Set virtual time speed
      operationId: setCurrentSpeed
      parameters:
        - in: body
          name: currentspeed
          description: Virtual time speed
          schema:
            $ref: '#/definitions/SpeedEnum'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpeedEnum'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
    put:
      tags:
        - time
      summary: Update virtual time speed (same as setCurrentSpeed)
      description: Update virtual time speed (same as setCurrentSpeed)
      operationId: updateCurrentSpeed
      parameters:
        - in: body
          name: currentSpeed
          description: Virtual time speed
          schema:
            $ref: '#/definitions/SpeedEnum'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SpeedEnum'
        '400':
          description: Bad request
        '401':
          description: Authentication required
        '403':
          description: Forbidden - ADMIN role necessary
