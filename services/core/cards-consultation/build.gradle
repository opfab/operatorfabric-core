dependencies {
    swaggerCodegen generator.swagger, project(':tools:swagger-spring-generators')
    swaggerUI generator.swaggerUI
    compile project(':tools:generic:utilities'), project(':tools:spring:spring-utilities')
    compile  cloud.starterBus, cloud.eurekaClient
    compile boot.starterAop
    compileOnly boot.annotationConfiguration
    annotationProcessor boot.annotationConfiguration

    compile boot.starterWebflux
    compile project(':client:cards-client-data')
    compile project(':tools:spring:spring-mongo-utilities')
    compile project(':tools:spring:spring-oauth2-utilities')
    testCompile testing.reactor
    testCompile project(':tools:spring:spring-test-utilities')
}

bootJar {
    manifest {
        attributes( "Created-By"             : "Gradle ${gradle.gradleVersion}",
                    "Specification-Title"    : "OperatorFabric Card Read Service",
                    "Implementation-Title"   : "OperatorFabric Card Read Service",
                    "Implementation-Version" : operatorfabric.version,
                    "Specification-Version"  : operatorfabric.version
        )
    }
}

swaggerSources {
    endpoints {
        inputFile = file('../cards-publication/src/main/modeling/swagger.yaml')
        code {
            language = 'org.lfenergy.operatorfabric.generators.OpfabSpringGenerator'
            configFile = file('src/main/modeling/config.json')
            outputDir = file("./build/swagger")
            templateDir = file('../src/main/resources/swagger-templates')
            components = ['models']
        }
        ui {
            outputDir = file("./build/docs/api")
        }
    }
}
