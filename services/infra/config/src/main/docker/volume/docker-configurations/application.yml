management:
  endpoints:
    web:
      exposure:
        include: '*'
spring:
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  cloud:
    config:
      discovery:
        enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/auth/realms/dev/protocol/openid-connect/certs
  data:
    mongodb:
      uris:
        - mongodb://root:password@mongodb:27017/operator-fabric?authSource=admin&authMode=scram-sha1
eureka:
  client:
    service-url:
      defaultZone: http://registry:8080/eureka
    region: default
  registryFetchIntervalSeconds: 5
  
operatorfabric:
  security:
    oauth2:
      client-id: opfab-client
    jwt:
      login-claim: preferred_username    
      expire-claim: exp
### activate the folLowing if you want the entities of the user to came from the token and not mongoDB   
### entitiesIdClaim is the name of the field in the token     
    #  entitiesIdClaim : entitiesId
    #  gettingEntitiesFromToken: true
###

### activate the following if you want the groups of the user to came from the token and not mongoDB   
#      groups: 
#        mode: JWT
#        rolesClaim:
#          rolesClaimStandard:
#            - path: "ATTR1"
#            - path: "ATTR2"            
#          rolesClaimStandardArray:  
#            - path: "resource_access/opfab-client/roles"
#          rolesClaimStandardList:  
#            - path: "roleFieldList" 
#              separator: ";"           
#          rolesClaimCheckExistPath: 
#            - path: "resource_access/AAA" 
#              roleValue: "roleAAA"      
#            - path: "resource_access/BBB"
#              roleValue: "roleBBB"  
### 
#logging.level.root: DEBUG     
