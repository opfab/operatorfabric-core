plugins {
    id "org.hidetake.swagger.generator"
}

dependencies {

    swaggerCodegen generator.swagger, project(':tools:swagger-spring-generators')
    implementation project(':tools:spring:spring-mongo-utilities')
    implementation project(':tools:spring:spring-utilities')
    implementation project(':tools:spring:spring-oauth2-utilities')
    implementation project(':tools:generic:utilities')
    implementation project(':client:users-client-data')
    swaggerUI generator.swaggerUI
    implementation boot.starterSecurity
    implementation spring.securityOauthResource, spring.securityOauthJose
    implementation boot.starterValidation
    implementation boot.starterMongo


    compileOnly boot.annotationConfiguration
    annotationProcessor boot.annotationConfiguration

    implementation boot.starterWeb, boot.starterUndertow

    testImplementation spring.securityTest
    testImplementation project(':tools:generic:test-utilities')
    testImplementation project(':tools:spring:spring-test-utilities')

    implementation misc.jlibmodbus
}


bootJar {
    manifest {
        attributes("Created-By"             : "Gradle ${gradle.gradleVersion}",
                   "Specification-Title"    : "OperatorFabric External Devices Manager",
                   "Implementation-Title"   : "OperatorFabric External Devices Manager",
                   "Implementation-Version" : operatorfabric.version,
                   "Specification-Version"  : operatorfabric.version
        )
    }
}
// This is a temporary fix to avoid false build error, see (#1543)
tasks.named("processResources") {
    duplicatesStrategy = 'include'
}

docker {
    name "lfeoperatorfabric/of-${project.name}:${project.version}"
    if (!project.version.equals("SNAPSHOT"))
        tag "latest", "latest"
    labels (['project':"${project.group}"])
    files( "build/libs"
            , "../../config/docker/common-docker.yml"
            , "../../config/docker/${project.name.toLowerCase().replaceAll("-service","")}-docker.yml"
            , '../../src/main/docker/java-config-docker-entrypoint.sh'
            ,'../../src/main/docker/add-certificates.sh')
    buildArgs(['JAR_FILE'       : "${project.name.toLowerCase()}-${project.version.toUpperCase()}.jar",
               'https_proxy'    : proxy.https])
    dockerfile file("src/main/docker/Dockerfile")
}
