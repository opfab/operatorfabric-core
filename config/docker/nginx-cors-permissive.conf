# docker-compose DNS used to resolved users service
resolver 127.0.0.11 ipv6=off;

# Log format to have msec in time + request processing time 
map "$time_local:$msec" $time_local_ms { ~(^\S+)(\s+\S+):\d+\.(\d+)$ $1.$3$2; }
log_format opfab-log '$remote_addr - $time_local_ms'
                '"$request" $status $request_time $body_bytes_sent ';

server {
  listen 80;
  server_name localhost;
  access_log /var/log/nginx/access.log opfab-log;

  ### CUSTOMIZATION - BEGIN
  # Url of the Authentication provider
  set $KeycloakBaseUrl "http://keycloak:89";
  # Realm associated to OperatorFabric within the Authentication provider
  set $OperatorFabricRealm "dev";
  # base64 encoded pair of authentication in the form of 'client-id:secret-id'
  set $ClientPairOFAuthentication "b3BmYWItY2xpZW50Om9wZmFiLWtleWNsb2FrLXNlY3JldA==" ;
 
  ### CUSTOMIZATION - END

  ###  OPFAB GENERIC CONFIGURATION  ###
  ###  BE CAREFUL WHEN MODIFYING    ###
  set $BasicValue "Basic $ClientPairOFAuthentication";
  set $KeycloakOpenIdConnect $KeycloakBaseUrl/auth/realms/$OperatorFabricRealm/protocol/openid-connect;
  gzip on;
  gzip_types application/javascript text/css;

  #   enables `ng serve` mode with following default headers and avoid cors error on status other than 2xx with always
  add_header 'Access-Control-Allow-Origin' '*' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  add_header 'Access-Control-Allow-Methods' '*' always;
  add_header 'Access-Control-Allow-Headers' '*' always;

  # To be sure new files are downloaded when version change
  # we set no-cache 
  location / {
          # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' '*' always;
    add_header 'Access-Control-Allow-Headers' '*' always;
    add_header Cache-Control "no-cache";
    alias /usr/share/nginx/html/;
    index index.html index.htm;
  }


  # Auth configuration 
  location /auth/check_token {
    proxy_set_header Host $http_host;
    proxy_set_header Authorization $BasicValue ;
    proxy_pass $KeycloakOpenIdConnect/token/introspect;
  }
  location /auth/token {
    proxy_set_header Host $http_host;
    proxy_set_header Authorization $BasicValue ;
    proxy_pass $KeycloakOpenIdConnect/token;
  }
  location /auth/code/ {
    proxy_set_header Host $http_host;
    proxy_set_header Authorization $BasicValue ;
    proxy_pass $KeycloakOpenIdConnect/auth?response_type=code&client_id=opfab-client&$args;
  }
  location /auth {
    proxy_set_header X-Forwarded-For $proxy_protocol_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass http://keycloak:89/auth;
  }

  location /businessconfig/ {
     # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    gzip on;
    gzip_types application/json;
    proxy_set_header Host $http_host;
    proxy_pass http://businessconfig:2100/;
    proxy_set_header X-Forwarded-For $remote_addr;
    client_max_body_size 100M;
  }


 # Only needed if the control of the user IP address is activated
  location ~ "^/users/internal/(.*)" {
    return 404;
  }


  # Users service configuration 
  location /users/ {
     # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://users:2103/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }

  location /cards-consultation/ {
    # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://cards-consultation:2104/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }

  ###  !!!! SECURITY WARNING !!!! 
  ### The following configuration is suitable only if you set checkAuthenticationForCardSending to true 
  ### which is the default configuration 
  ### 
 
  location /cards-publication/ {
          # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://cards-publication:2102/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }
  
  ### if you set checkAuthenticationForCardSending to false  
  ### you MUST not permit to access cards endpoint via nginx 
  ### and replace the previous configuration by the following conf 
  
  #location /cards-publication/cards/user {
  #  proxy_set_header Host $http_host;
  #  proxy_pass http://cards-publication:2102/cards/user;
  #  proxy_set_header X-Forwarded-For $remote_addr;
  #}
  #location /cards-publication/cards/translateCardField {
  #  proxy_set_header Host $http_host;
  #  proxy_pass http://cards-publication:2102/cards/translateCardField;
  #  proxy_set_header X-Forwarded-For $remote_addr;
  #}
  ### 
  ### !!! END SECURITY WARNING  !!! 


  # External device configuration (Optional service)
  location /externaldevices/ {
    # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://external-devices:2105/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }




   location /supervisor/ {
    # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://supervisor:2108/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }

  location /cards-external-diffusion/ {
    # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://cards-external-diffusion:2106/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }

  location /cards-reminder/ {
    # enables `ng serve` mode
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' '*';
      add_header 'Access-Control-Allow-Headers' '*';
      add_header 'Content-Length' 0;
      add_header 'Vary' 'Origin';
      add_header 'Vary' 'Access-Control-Request-Method' ;
      add_header 'Vary' 'Access-Control-Request-Headers';
      return 204;
    }
    proxy_set_header Host $http_host;
    proxy_pass http://cards-reminder:2107/;
    proxy_set_header X-Forwarded-For $remote_addr;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }

  # External application test (Not needed in production)
  location = /external/ {
    add_header Cache-Control "no-cache";
    alias /usr/share/nginx/html/external/;
    index index.html index.htm;
  }
}





