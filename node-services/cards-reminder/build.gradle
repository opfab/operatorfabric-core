plugins {
    id "base"
    id 'com.github.node-gradle.node'
}

npmInstall {
    // Important: Use 'npm ci' instead of 'npm install' to ensure consistent dependencies.
    // 'npm ci' uses the exact versions from package-lock.json, preventing unexpected changes.
    npmCommand = ['ci'] 
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')

    outputs.dir('build')

}

task runBuild(type: NpmTask) {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')

    outputs.dir('build')

    dependsOn npmInstall
    args = ['run', 'build']
}

task test(type: NpmTask) {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('node_modules'))
    inputs.file('package.json')
    inputs.file('package-lock.json')
    inputs.file('jest.config.js')

    outputs.dir('build')
    dependsOn runBuild
    args = ['run', 'test']
}


task buildDocker(type: Exec) {
    workingDir project.projectDir
    commandLine 'docker', 'build', '--build-arg', "https_proxy=${proxy.https}",'-t', "lfeoperatorfabric/of-${project.name}:${project.version}", '.'
}


tasks.runBuild.dependsOn(':node-services:node-common:npmInstall')

build.dependsOn(test)
build.dependsOn(runBuild)

assemble.dependsOn(runBuild)
tasks.buildDocker.dependsOn build

tasks.named("buildDocker") {
    inputs.files(fileTree('src'))
    inputs.files(fileTree('config'))
    inputs.files(fileTree('node_modules'))
    inputs.file('Dockerfile')
    inputs.file('package.json')
    inputs.file('package-lock.json')
    outputs.dir("build/docker")
}

