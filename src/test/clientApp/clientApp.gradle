
buildscript {
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {

	}
}

apply plugin: plugin.bom
apply plugin: plugin.boot
apply plugin: 'java'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	manifest {
		attributes("Created-By"             : "Gradle ${gradle.gradleVersion}",
				"Specification-Title"    : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Title"   : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Version" : operatorfabric.version,
				"Specification-Version"  : operatorfabric.version
		)
	}
}

dependencies {
	implementation boot.starterWeb
	implementation "org.opfab:cards-client-data:${project.version}"

	annotationProcessor misc.lombok
	implementation project(':tools:generic:utilities'), project(':tools:spring:spring-utilities')
	testImplementation boot.starterTest

	// It would be nice to take the jars from MavenCentral (for releases) or MavenLocal (for snapshots) instead to
	// test the publication/signing process as well but it can't work with our release process : the jars aren't
	// available yet when the builds run.
	implementation project(':client:cards-client-data')
}

test {
	useJUnitPlatform()
}


