

plugins {
	id "com.palantir.docker"
	id "org.springframework.boot"
	id "io.spring.dependency-management"
}

apply plugin: 'java'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	manifest {
		attributes("Created-By"             : "Gradle ${gradle.gradleVersion}",
				"Specification-Title"    : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Title"   : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Version" : operatorfabric.version,
				"Specification-Version"  : operatorfabric.version
		)
	}
}


docker {
	/* We need to specify the version in the name because if empty, it is tagged latest (https://vsupalov.com/docker-latest-tag/)
	* but we also need to add a "tag" property otherwise the corresponding tasks (dockerTagXXX, dockerPushXXX) are not created */
	name "lfeoperatorfabric/of-external-app:${project.version}"
	tag "${project.version}", "lfeoperatorfabric/of-external-app:${project.version}"
	if (!project.version.equals("SNAPSHOT"))
		tag "latest", "latest"
    labels (['project':"${project.group}"])
	files( "build/libs")
	dockerfile file('src/main/docker/Dockerfile')
	buildArgs(['JAR_FILE'       : "externalApp-${project.version.toUpperCase()}.jar",
                       'http_proxy'     : apk.proxy.uri,
                       'https_proxy'    : apk.proxy.uri,
                       'HTTP_PROXY_AUTH': "basic:*:$apk.proxy.user:$apk.proxy.password"])
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
	}
}

test {
	useJUnitPlatform()
}

// This will never actually serve as services rely on bootJars not jars
// It's just a temporary workaround so build/libs is not flagged as an implicit dependency of docker
jar {
	destinationDirectory.set(file("build/unused_plain_jar"))
}

tasks.docker.dependsOn build
tasks.dockerPrepare.dependsOn bootJar