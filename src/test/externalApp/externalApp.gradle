

plugins {
	id "com.palantir.docker"
	id "org.springframework.boot"
	id "io.spring.dependency-management"
}

apply plugin: 'java'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	manifest {
		attributes("Created-By"             : "Gradle ${gradle.gradleVersion}",
				"Specification-Title"    : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Title"   : "OperatorFabric Businessconfig Parties Manager",
				"Implementation-Version" : operatorfabric.version,
				"Specification-Version"  : operatorfabric.version
		)
	}
}


docker {
	name "lfeoperatorfabric/of-external-app:${project.version}"

	if (!project.version.equals("SNAPSHOT"))
		tag "latest", "latest"
    labels (['project':"${project.group}"])
	    files( "build/libs"
            , "../../../config/docker/common-docker.yml"
            , "../../../config/docker/external-app-docker.yml"
            , '../../main/docker/java-config-docker-entrypoint.sh'
            ,'../../main/docker/add-certificates.sh')
	dockerfile file('src/main/docker/Dockerfile')
	buildArgs(['JAR_FILE'       : "externalApp-${project.version.toUpperCase()}.jar",
               'https_proxy'    : proxy.https
			 ])
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.opfab:cards-client-data:${project.version}"
	implementation boot.starterSecurity
    implementation spring.securityOauthResource, spring.securityOauthJose


	//Transitive dependencies udpate needed for security reasons 
	implementation misc.snakeyaml
	//End transitive dependencies

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation project(':tools:generic:utilities')
	//implementation project(':tools:spring:spring-oauth2-utilities')
	implementation project(':tools:spring:spring-utilities')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {

	implementation project(':client:cards-client-data')
	}

}

test {
	useJUnitPlatform()
}

// This will never actually serve as services rely on bootJars not jars
// It's just a temporary workaround so build/libs is not flagged as an implicit dependency of docker
jar {
	destinationDirectory.set(file("build/unused_plain_jar"))
}

tasks.docker.dependsOn build
tasks.dockerPrepare.dependsOn bootJar