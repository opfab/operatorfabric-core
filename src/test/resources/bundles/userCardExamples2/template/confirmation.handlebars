<br />
<h2 style="text-align: center;"> {{card.data.question}} </h2>

<br />
<div style="width:100%;display:flex;flex-wrap:wrap">  
    <div class="opfab-select" style="flex-basis:0;width:20%;position:relative;flex-grow:1;">
        <label for="confirm" style="z-index: 100;"> Confirm </label>
        <select id="resp_confirm" name="confirm">
            <option  value="YES">YES</option>
            <option  value="NO">NO</option>
        </select>

    </div>
    <div class="opfab-input" style="flex-basis:0;width:100%;position:relative;flex-grow:1;margin-left:20px">
        <label> Comment </label>
        <input id="resp_message" name="message" style="width:100%" >
    </div>
</div>


<br/>
<div id="childs-div"></div>
<br/>
 <div id="entities-div"> </div>
<br/>
 <div id="response-entity-div"> </div>


<script>
    if (templateGateway.getDisplayContext() != 'realtime' ) {
       document.getElementById("resp_confirm").disabled = true;
       document.getElementById("resp_message").disabled = true;
    }
    templateGateway.applyChildCards = () => {
        let childsDiv = document.getElementById("childs-div");

        if (templateGateway.childCards[0]) {
            let responses = ' <h3>Responses received </h3><center> <br/>'
            responses += ' <table width="100%""> <tr> <th> Entity </th>';
            responses += ' <th> Confirmed </th>';
            responses += ' <th> Comment </th>';
            responses += ' </tr>';

            templateGateway.childCards.forEach((c, i) => {
                responses += `<tr> <td> ${c.publisher} </td>`
                responses += `<td> ${c.data.confirm} </td>`;
                responses += `<td> ${c.data.message} </td>`;
                responses += "</tr>";
            });

            responses += '</table> </center> <br/> <br/>';

            childsDiv.innerHTML = responses;
        } else {
            childsDiv.innerHTML = '';
        }
    }

    templateGateway.getUserResponse = function () {
        var confirm = document.getElementById('resp_confirm').value;
        const message = document.getElementById('resp_message').value;
        const responseCardData = { 
                confirm: confirm,
                message: message
            };
        return {
            valid: true,
            responseCardData: responseCardData
        };

    }

    function loadEntitiesList () {
        let entitiesDiv = document.getElementById("entities-div");
        let text = "Entities allowed to respond : ";
        let entities = templateGateway.getEntitiesAllowedToRespond();
        entities.forEach( 
            id => {
                text += "&nbsp; &nbsp; &nbsp;";
                text +=  templateGateway.getEntityName(id);
                }
        );
        // if it is in card preview (usercard) , the template gateway does not contain the list 
        // so we show nothing
        if (entities.length>0) entitiesDiv.innerHTML = text;
    }
    loadEntitiesList();

    function loadEntityUsedForResponse() {
        let responseEntityDiv = document.getElementById("response-entity-div");
        let responseEntity = templateGateway.getEntityUsedForUserResponse();
        let userAllowedToRespond = templateGateway.isUserAllowedToRespond();
        if (userAllowedToRespond && responseEntity) 
            responseEntityDiv.innerHTML = "Entity used by user to respond : " + templateGateway.getEntityName(responseEntity);
    }
    loadEntityUsedForResponse();

</script>

</p>