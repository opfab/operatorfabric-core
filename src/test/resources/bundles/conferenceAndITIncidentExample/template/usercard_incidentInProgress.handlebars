<!-- Copyright (c) 2020-2022, RTE (http://www.rte-france.com)              -->
<!-- See AUTHORS.txt                                                       -->
<!-- This Source Code Form is subject to the terms of the Mozilla Public   -->
<!-- License, v. 2.0. If a copy of the MPL was not distributed with this   -->
<!-- file, You can obtain one at http://mozilla.org/MPL/2.0/.              -->
<!-- SPDX-License-Identifier: MPL-2.0                                      -->
<!-- This file is part of the OperatorFabric project.                      -->


<br/>
<br/>
<div class="opfab-textarea">
    <label for="message"> INCIDENT DESCRIPTION </label>
    <textarea id="message" name="message" placeholder="Write something.."
        style="width:100%"> {{card.data.message}} </textarea>
</div>

<br />

    <div class="opfab-multiselect">
        <label>  IMPACTED SERVICES   </label>
        <div id="service-select"></div>
  </div>
<br/>

<div class="opfab-input">
    <label for="OTHERS"> OTHER IMPACTS </label>
    <input id="OTHERS" name="OTHERS"
        style="width:100%" value="{{card.data.impacts.OTHERS}}">
</div>

<!-- Hidden attribute for cypress tests -->
<!-- remove them if you use this template as example -->
<tr>
    <div hidden="true" class="opfab-input" style="margin-right:5px">
        <label>HIDDEN PROCESS MOCK </label>
        <input id="hidden_process" name="hidden_process">
    </div>
    <div hidden="true" class="opfab-input" style="margin-right:5px">
        <label>HIDDEN STATE MOCK </label>
        <input id="hidden_state" name="hidden_state">
    </div>
</tr>
<br/>
<script>

    // The two following lines are used for cypress test 
    // remove them if you use this template as example 
    document.getElementById("hidden_process").value = usercardTemplateGateway.getCurrentProcess();
    document.getElementById("hidden_state").value = usercardTemplateGateway.getCurrentState();


    serviceSelect = opfab.multiSelect.init({
        id: "service-select",
        options: [
        {
            label: 'Group 1',
            options : [
                { label: 'Service A', value: 'SA' },
                { label: 'Service B', value: 'SB' },
                { label: 'Service C', value: 'SC' }
            ]
        },
        {
            label: 'Group 2',
            options: [
                { label: 'Service D', value: 'SD' },
                { label: 'Service E', value: 'SE' },
                { label: 'Service F', value: 'SF' }
            ]
        }
        ],
        multiple: true,
        search: true
    });



    usercardTemplateGateway.getSpecificCardInformation = function () {

        const selectedValues = serviceSelect.getSelectedValues(); 
        console.log("selected Value = ",selectedValues);

        const message = document.getElementById('message').value;
        const SA = selectedValues.includes('SA');
        const SB = selectedValues.includes('SB');
        const SC = selectedValues.includes('SC');
        const SD = selectedValues.includes('SD');
        const SE = selectedValues.includes('SE');
        const SF = selectedValues.includes('SF');
        const OTHERS = document.getElementById('OTHERS').value;

        const lttd = new Date().valueOf() + 1800000; // 30 min after current time
        const startDate = new Date().valueOf() + 300000; // 5 min after current time

        const card = {
            summary: { key: "incidentInProgress.summary" },
            title: { key: "incidentInProgress.title" },
            entitiesAllowedToRespond: [ "ENTITY3_FR", "ENTITY2_FR"],
            entitiesRequiredToRespond: [ "ENTITY4_FR"],
            keepChildCards: true,
            startDate: startDate,
            entityRecipients: ["ENTITY_FR","IT_SUPERVISOR_ENTITY"],
            data: {
                message: message,
                impacts :
                     {
                         SA : SA,
                         SB : SB,
                         SC: SC,
                         SD: SD,
                         SE: SE,
                         SF: SF,
                         OTHERS: OTHERS
                    }
            },
            lttd : lttd

        };
        return {
            valid: true,
            card: card,
            viewCardInAgenda: false
        };

    }
</script>
